# Dockerfile for the Chrono Clash Web UI

# Use an official Python runtime as a parent image for a lean final image.
# Using an Alpine image significantly reduces the final image size.
FROM python:3.11-alpine

# Set environment variables to make Python run better inside Docker
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH="${PYTHONPATH}:/app"

# Set the working directory inside the container.
WORKDIR /app

# Copy the requirements file into the container.
COPY requirements-webui.txt .

# Install dependencies
# Using --no-cache-dir makes the image smaller
RUN pip install --no-cache-dir -r requirements-webui.txt

# Copy the application source code into the container
# This includes the server script, the core game logic module, and config.
COPY web_app.py .
COPY templates/ ./templates/
COPY config.json ./config.json

# The database is expected to be mounted as a volume. We create a directory
# for it here to prevent runtime errors if the DB_NAME in config.json is
# set to a path like 'data/chronoclash.db'.
RUN mkdir -p /app/data

# Expose port 5000 to allow external traffic to reach the application.
EXPOSE 5000

# Define the command to run the application when the container starts.
CMD ["python", "web_app.py"]
